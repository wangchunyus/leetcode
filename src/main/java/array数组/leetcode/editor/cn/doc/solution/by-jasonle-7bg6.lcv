因为数组中的数字满足 0 < nums[i] < n
所以数组中的元素 - 1必然是数组中的一个下标
所以我们只需要将数组的数字对应的下标上的数置为负数，则修改后的数组中的正数，说明该数对应的下标 + 1不存在于数组中

**注意：为什么不将数字对应的下标上的数置为0反而置为负数？**
是因为如果置为0，当遍历到0时，计算出来的下标是-1，会产生数组越界，而置为负数可以通过绝对值的方法恢复原数

以下是代码

* 

```
public static List<Integer> findDisappearedNumbers(int[] nums) {

    List<Integer> result = new ArrayList<>();

    for (int i = 0; i < nums.length; i++) {
        if (nums[Math.abs(nums[i]) - 1] > 0){
            nums[Math.abs(nums[i]) - 1] *= -1;
        }
    }

    for (int i = 0; i < nums.length; i++) {
        if (nums[i] > 0) {
            result.add(i + 1);
        }
    }
    return result;
}
```

